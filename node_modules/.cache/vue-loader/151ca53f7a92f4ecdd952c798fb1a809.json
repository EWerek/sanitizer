{"remainingRequest":"/Users/jamiesokolsky/sanitizer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jamiesokolsky/sanitizer/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jamiesokolsky/sanitizer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jamiesokolsky/sanitizer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jamiesokolsky/sanitizer/src/components/Products.vue?vue&type=template&id=65549f94&","dependencies":[{"path":"/Users/jamiesokolsky/sanitizer/src/components/Products.vue","mtime":1591886530996},{"path":"/Users/jamiesokolsky/sanitizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamiesokolsky/sanitizer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jamiesokolsky/sanitizer/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jamiesokolsky/sanitizer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jamiesokolsky/sanitizer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}